import matplotlib.pyplot as plt
from pycocotools import mask
import matplotlib.patches as patches
from utils import*

# my mask annotation
rle = {
"size": [
900,
1600
],
"counts": "ZWIwbDRYZzAwMDBPMTAwMDAwME8yTzAwMDAwTzEwMDAwMDBPMTAwMDAwME8yTzAwMDAwTzEwMDAwMDBPMTAwMDAwME8yTzAwMDAwTzEwMDAwMDBPMTAwMDAwME8xMDFPMDAwTzEwMDAwMDBPMTAwMDAwME8xMDFPMDAwTzEwMDAwMDBPMTAwMDAwME8xMDFPMDAwTzEwMDAwMDBPMTAwMDAwMDAwTzEwMU8wMDBPMTAwMDAwME8xMDAwMDAwTzEwMU8wMDBPMTAwMDAwME8xMDAwMDAwTzEwMU8wMDBPMTAwMDAwME8xMDAwMDAwTzEwMDAwMDBPMTAwMDAwME8xMDAwMU8wTzEwMDAwMDBPMTAwMDAwME8xMDAwMDAwTzEwMDAwMDBPMTAwMDAwME8xMDAwMDAwTzEwMDAwMDFOMTAwMDAwMDAwTzEwMDAwMDBPMTAwMDAwME8xMDAwMDAwTzEwMDAwMDBPMTAwMDAwME8xMDAwMDAwTzJPMDAwMDBPMTAwMDAwME8xMDAwMDAwTzEwMDAwMDBPMTAwMDAwME8xMDAwMDAwTzEwMDAwMDBPMTAxTzAwME8xMDAwMDAwTzEwMDAwMDBPMTAwMDAwME8xMDAwMDAwTzEwMDAwMDAwME8xMDAwMDAwTzEwMU8wMDBPMTAwMDAwME8xMDAwMDAwTzEwMDAwMDBPMTAwMDAwME8xMDAwMDAwTzEwMDAwMDBPMTAwMDAwMU4xMDAwMDAwTzEwMDAwMDBPMTAwMDAwME8xMDAwMDAwTzEwMDAwMDBPMTAwMDAwME8xMDAwMDAwTzJPMDAwMDBPMTAwMDAwME8xMDAwME4yTjJPMU4yTzFOMk4yTzFOMk4yTzFOMk8xTjJOMk0zSjZLNUs1SjZNMzAwMDFPMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFPMDAwMDAwMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFPMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxTzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxTzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBPMTAwMDAwME8xMDFPME8xMDAwME8xMDAwMDAwTzEwMDAwTzEwMDAwTzEwMDAwMDBPMTAwMDAwME8xMDAwMDAwMDBPMTAwMDAwME8xMDAwMDAwMDBPMk8wMDAwMDAwTzEwMDAwMDBPMTAwMDAwMDAwTzEwMDAwMDAwME8xMDAwMDAwTzEwMDAwMDAwME8xMDAwMDAwMDBPMTAwMDAwME8xMDFPMEVsRWZeT1Q6WmEwbkVkXk9SOlxhMFFGYF5PUDpgYTBSRl5eT245YmEwOjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBOMk8xTjJPMTAwMDAwMDAwMDAwMDAxTzAwMDAwMDAwMDFPMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMU8yTjJOMU8wMDAwMU8wMDAwMDBPMUw0TjIwMDFPMDAwMDAwMDBPMTAwMDAwME8xMDBPMTAwTzEwME8xTzFPMU8xMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMU8wMDFPMDBPMU8xTzFPMTAwMDAwMDAwMDAwTzEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFPMDAwMDFPMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFPMDAxTzAwNkoxTzAwMU8wMDAwTzEwME8xMDAwMDAwMDAwMDAwMDAwMDBPMTAwMDAwMU8wMDFPMDAxT08xTzEwME8xMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFPMDAwMDAwMDAwMDAwMDAwMDFPMDAwMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMDAxTzAwMDAwMDAwMDAwMDAwMDAxTzAwMDAwMDBPMTAwMDAwMDAxTzAwMDAwMDAwMDAwMDAwMDAwMDFPMDAwMDAwMDAwMDAwMDAwMDFPMDAwMDAwMDAwMDAwMDAwMDFPMDAwMDAwMDAwMDAwMDAwMDFPMDAwMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDBPMTAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMDAxTzAwMDAwMDAwMDAwMDAwMDAxTzAwMDAwMDAwMDAwMDAwMDAxTzAwME8xMDAwMDAwMDAwMDAwMDFPMDAwMDAwMDAwMDAwMDAwMDFPMDAwMDAwMDAyTjNNM00yTjAwMU8xTzAwMU8wMDAwMU4xMDAwMDAwMDFPMDAwMDAwMDAxTzAwMDAxTzJOMU8xTzJOMU8xTzJOMDAxTzAwMU8wMDFPMDAxTzAwMU8wMDFPMDAwTzEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxTzAwMU8wMDFPMU8wMDFPMDAxTzBPMTAwMDFPMDAwMDAwMDAwME8xMDAwMDAwTjJOMk4yMDAwMDAwMU8wMDAwMDAyTjJOMk4yTjAwMU8xTzFPMDAxTzFOMTAxTzAwMDAxTzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwTzEwME8xTzEwME8xTjJOMk4yTzEwMDAwMDAwMDAwME8xME8xMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBPMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwME8wMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwTzEwMDAwMDAwMDAwMDAwMDAwMDAxTzAwMDAwTzEwMDAxTzAwMDBPMTAwTzFPMTAwTzFPMTAwTzExTzJOMU8yTjAwMU8wMDFPMDAxTzAwMDAwTzJPMDAwMDAwMU8wMDAwMDAwME8xMDAwMDAwMDAwME8xMDAwME8xMDBPMTAwTzFOMk8xTjJPMTBPMTAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDBPMTAwMDFPMDAwMDAwMDAwMDAwMDAwMDFPMDAwMDAwMDAwMDAwMDAwMDFPMDAwMDAwMDAwMDBPMTAwMDFPMDAwMDAwMDAwMDAwMDAwMDFPMDAwMDAwMDAwMDAwMDAwMDFPMDAwMDAwMDAwMDAwME8xMDFPMDAwMDAwMDAwMDAwMDAxTzAwMDAwMDAwMDAwMDAwMDAxTzAwMDAwMDAwMDAwMDAwME8yTzAwMDAwMDAwMDAwMDAwMDAxTzAwMDAwMDAwMDAwMDAwMDAxTzAwMDAwMDAwMDAwMDAwMDAxTjEwMDAwMDAwMDAwMDAwMDAxTzAwMDAwMDAwMDAwMDAwMDAxTzAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwTzEwMU8wMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDAwMU8wMDAwMDAwMDAwMDAwMDFPMDAwMDBPMTAwMDAwMDAwMDFPMDAwMDAwMDAwMDAwMDAwMDFPMDAwMDAwMDAwMDAwMDAwMDFPMDAwMDAwal9P=="
}

RLE=nuRLE2RLE(rle)
# decode RLE to numpy

# print(nuRLE2RLE1(rle))
bbox=mask.toBbox(RLE).tolist()

decoded_mask = mask.decode(RLE)
#
print(decoded_mask)
print(type(RLE["counts"]))
print(bbox)
print(type(bbox))
# print(mask.encode(RLE))
# # show mask
# showmask
fig, ax = plt.subplots(1)
ax.imshow(decoded_mask)

# showbbox
x, y, w, h = map(int, bbox)
rect = patches.Rectangle((x, y), w, h, linewidth=1, edgecolor='r', facecolor='none')
ax.add_patch(rect)


plt.axis('off')
plt.show()




